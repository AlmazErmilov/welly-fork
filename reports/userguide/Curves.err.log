Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/asyncio/base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from welly import Well

p129 = Well.from_las('https://geocomp.s3.amazonaws.com/data/P-129.LAS')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/welly/las.py:485[0m, in [0;36mfile_from_url[0;34m(url)[0m
[1;32m    484[0m [38;5;28;01mtry[39;00m:
[0;32m--> 485[0m     text_file [38;5;241m=[39m StringIO([43mrequest[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m[43murl[49m[43m)[49m[38;5;241m.[39mread()[38;5;241m.[39mdecode())
[1;32m    486[0m [38;5;28;01mexcept[39;00m error[38;5;241m.[39mHTTPError [38;5;28;01mas[39;00m e:

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:215[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    214[0m     opener [38;5;241m=[39m _opener
[0;32m--> 215[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:521[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    520[0m     meth [38;5;241m=[39m [38;5;28mgetattr[39m(processor, meth_name)
[0;32m--> 521[0m     response [38;5;241m=[39m [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[1;32m    523[0m [38;5;28;01mreturn[39;00m response

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:630[0m, in [0;36mHTTPErrorProcessor.http_response[0;34m(self, request, response)[0m
[1;32m    629[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m200[39m [38;5;241m<[39m[38;5;241m=[39m code [38;5;241m<[39m [38;5;241m300[39m):
[0;32m--> 630[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m
[1;32m    631[0m [43m        [49m[38;5;124;43m'[39;49m[38;5;124;43mhttp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[1;32m    633[0m [38;5;28;01mreturn[39;00m response

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:559[0m, in [0;36mOpenerDirector.error[0;34m(self, proto, *args)[0m
[1;32m    558[0m args [38;5;241m=[39m ([38;5;28mdict[39m, [38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mhttp_error_default[39m[38;5;124m'[39m) [38;5;241m+[39m orig_args
[0;32m--> 559[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:492[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    491[0m func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 492[0m result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m    493[0m [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/urllib/request.py:639[0m, in [0;36mHTTPDefaultErrorHandler.http_error_default[0;34m(self, req, fp, code, msg, hdrs)[0m
[1;32m    638[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[0;32m--> 639[0m     [38;5;28;01mraise[39;00m HTTPError(req[38;5;241m.[39mfull_url, code, msg, hdrs, fp)

[0;31mHTTPError[0m: HTTP Error 403: Forbidden

During handling of the above exception, another exception occurred:

[0;31mException[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 3[0m
[1;32m      1[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mwelly[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Well
[0;32m----> 3[0m p129 [38;5;241m=[39m [43mWell[49m[38;5;241;43m.[39;49m[43mfrom_las[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mhttps://geocomp.s3.amazonaws.com/data/P-129.LAS[39;49m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/welly/well.py:303[0m, in [0;36mWell.from_las[0;34m(cls, fname, remap, funcs, data, req, alias, encoding, printfname, index, **kwargs)[0m
[1;32m    301[0m [38;5;66;03m# If https URL is passed try reading and formatting it to text file.[39;00m
[1;32m    302[0m [38;5;28;01mif[39;00m re[38;5;241m.[39mmatch([38;5;124mr[39m[38;5;124m'[39m[38;5;124mhttps?://.+[39m[38;5;124m\[39m[38;5;124m..+/.+?[39m[38;5;124m'[39m, fname) [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 303[0m     fname [38;5;241m=[39m [43mfile_from_url[49m[43m([49m[43mfname[49m[43m)[49m
[1;32m    305[0m datasets [38;5;241m=[39m from_las(fname, encoding[38;5;241m=[39mencoding, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    307[0m [38;5;66;03m# Create well from datasets.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/welly/las.py:487[0m, in [0;36mfile_from_url[0;34m(url)[0m
[1;32m    485[0m     text_file [38;5;241m=[39m StringIO(request[38;5;241m.[39murlopen(url)[38;5;241m.[39mread()[38;5;241m.[39mdecode())
[1;32m    486[0m [38;5;28;01mexcept[39;00m error[38;5;241m.[39mHTTPError [38;5;28;01mas[39;00m e:
[0;32m--> 487[0m     [38;5;28;01mraise[39;00m [38;5;167;01mException[39;00m([38;5;124m'[39m[38;5;124mCould not retrieve url: [39m[38;5;124m'[39m, e)
[1;32m    489[0m [38;5;28;01mreturn[39;00m text_file

[0;31mException[0m: ('Could not retrieve url: ', <HTTPError 403: 'Forbidden'>)

